openapi: 3.0.2
info:
  description: Create beautiful product and API documentation with our developer friendly
    platform.
  version: 2.0.0
  title: API Endpoints
servers:
- url: https://dash.readme.io/api/v1
paths:
  "/api-specification":
    get:
      operationId: getAPISpecification
      description: Get API specification metadata
      tags:
      - API Specification
      parameters:
      - "$ref": "#/components/parameters/perPage"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/x-readme-version"
      responses:
        '200':
          description: Successfully retrieved API specification metadata.
          headers:
            Link:
              "$ref": "#/components/headers/link"
      security:
      - apiKey: []
    post:
      operationId: uploadAPISpecification
      description: Upload an API specification to ReadMe. Or, to use a newer solution
        see https://docs.readme.com/guides/docs/automatically-sync-api-specification-with-github
      tags:
      - API Specification
      parameters:
      - "$ref": "#/components/parameters/x-readme-version"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                spec:
                  description: OpenAPI/Swagger file
                  type: string
                  format: binary
      responses:
        '201':
          description: The API specification successfully imported
        '400':
          description: There was a validation error during import
      security:
      - apiKey: []
  "/api-specification/{id}":
    put:
      operationId: updateAPISpecification
      description: Update an API specification in ReadMe
      tags:
      - API Specification
      parameters:
      - name: id
        in: path
        description: ID of the API specification. The unique ID for each API can be
          found by navigating to your **API Definitions** page.
        schema:
          type: string
        required: true
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                spec:
                  description: OpenAPI/Swagger file
                  type: string
                  format: binary
      responses:
        '200':
          description: The API specification was updated
        '400':
          description: There was a validation error during import
        '404':
          description: There is no API specification with that ID
      security:
      - apiKey: []
    delete:
      operationId: deleteAPISpecification
      description: Delete an API specification in ReadMe
      tags:
      - API Specification
      parameters:
      - name: id
        in: path
        description: ID of the API specification. The unique ID for each API can be
          found by navigating to your **API Definitions** page.
        schema:
          type: string
        required: true
      responses:
        '204':
          description: The API specification was deleted
        '404':
          description: There is no API specification with that ID
      security:
      - apiKey: []
  "/categories/{slug}":
    get:
      operationId: getCategory
      summary: Get category
      description: Returns the category with this slug
      tags:
      - Categories
      parameters:
      - name: slug
        in: path
        description: Slug of category. Slugs must be all lowercase, and replace spaces
          with hyphens. For example, for the the category "Getting Started", enter
          the slug "getting-started"
        example: getting-started
        required: true
        schema:
          type: string
      - "$ref": "#/components/parameters/x-readme-version"
      responses:
        '200':
          description: The category exists and has been returned
        '404':
          description: There is no category with that slug
      security:
      - apiKey: []
  "/categories/{slug}/docs":
    get:
      operationId: getCategoryDocs
      summary: Get docs for category
      description: Returns the docs and children docs within this category
      tags:
      - Categories
      parameters:
      - name: slug
        in: path
        description: Slug of category. Slugs must be all lowercase, and replace spaces
          with hyphens. For example, for the the category "Getting Started", enter
          the slug "getting-started"
        example: getting-started
        required: true
        schema:
          type: string
      - "$ref": "#/components/parameters/x-readme-version"
      responses:
        '200':
          description: The category exists and all of the docs have been returned
        '404':
          description: There is no category with that slug
      security:
      - apiKey: []
  "/changelogs":
    get:
      operationId: getChangelogs
      summary: Get changelogs
      description: Returns a list of changelogs associated with the project API key
      tags:
      - Changelog
      parameters:
      - "$ref": "#/components/parameters/perPage"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: OK
          headers:
            Link:
              "$ref": "#/components/headers/link"
      security:
      - apiKey: []
    post:
      operationId: createChangelog
      summary: Create changelog
      description: Create a new changelog inside of this project
      tags:
      - Changelog
      requestBody:
        description: Changelog object
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Changelog"
      responses:
        '201':
          description: The changelog has successfully been created
        '400':
          description: There was a validation error during creation
      security:
      - apiKey: []
  "/changelogs/{slug}":
    get:
      operationId: getChangelog
      summary: Get changelog
      description: Returns the changelog with this slug
      tags:
      - Changelog
      parameters:
      - name: slug
        in: path
        description: Slug of changelog
        required: true
        schema:
          type: string
      responses:
        '200':
          description: The changelog exists and has been returned
        '404':
          description: There is no changelog with that slug
      security:
      - apiKey: []
    put:
      operationId: updateChangelog
      summary: Update changelog
      description: Update a changelog with this slug
      tags:
      - Changelog
      parameters:
      - name: slug
        in: path
        description: Slug of changelog
        required: true
        schema:
          type: string
      requestBody:
        description: Changelog object
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Changelog"
      responses:
        '200':
          description: The changelog has successfully been updated
        '400':
          description: There was a validation error during update
        '404':
          description: There is no changelog with that slug
      security:
      - apiKey: []
    delete:
      operationId: deleteChangelog
      summary: Delete changelog
      description: Delete the changelog with this slug
      tags:
      - Changelog
      parameters:
      - name: slug
        in: path
        description: Slug of changelog
        required: true
        schema:
          type: string
      responses:
        '204':
          description: The changelog has successfully been updated
        '404':
          description: There is no changelog with that slug
      security:
      - apiKey: []
  "/custompages":
    get:
      operationId: getCustomPages
      summary: Get custom pages
      description: Returns a list of custom pages associated with the project API
        key
      tags:
      - Custom Pages
      parameters:
      - "$ref": "#/components/parameters/perPage"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: OK
          headers:
            Link:
              "$ref": "#/components/headers/link"
      security:
      - apiKey: []
    post:
      operationId: createCustomPage
      summary: Create custom page
      description: Create a new custom page inside of this project
      tags:
      - Custom Pages
      requestBody:
        description: CustomPage object
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CustomPage"
      responses:
        '201':
          description: The custom page has successfully been created
        '400':
          description: There was a validation error during creation
      security:
      - apiKey: []
  "/custompages/{slug}":
    get:
      operationId: getCustomPage
      summary: Get custom page
      description: Returns the custom page with this slug
      tags:
      - Custom Pages
      parameters:
      - name: slug
        in: path
        description: Slug of custom page
        required: true
        schema:
          type: string
      responses:
        '200':
          description: The custom page exists and has been returned
        '404':
          description: There is no custom page with that slug
      security:
      - apiKey: []
    put:
      operationId: updateCustomPage
      summary: Update custom page
      description: Update a custom page with this slug
      tags:
      - Custom Pages
      parameters:
      - name: slug
        in: path
        description: Slug of custom page
        required: true
        schema:
          type: string
      requestBody:
        description: CustomPage object
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CustomPage"
      responses:
        '200':
          description: The custom page has successfully been updated
        '400':
          description: There was a validation error during update
        '404':
          description: There is no custom page with that slug
      security:
      - apiKey: []
    delete:
      operationId: deleteCustomPage
      summary: Delete custom page
      description: Delete the custom page with this slug
      tags:
      - Custom Pages
      parameters:
      - name: slug
        in: path
        description: Slug of custom page
        required: true
        schema:
          type: string
      responses:
        '204':
          description: The custom page has successfully been updated
        '404':
          description: There is no custom page with that slug
      security:
      - apiKey: []
  "/docs/{slug}":
    get:
      operationId: getDoc
      summary: Get doc
      description: Returns the doc with this slug
      tags:
      - Docs
      parameters:
      - name: slug
        in: path
        description: Slug of doc. must be lowercase, and replace spaces with hyphens.
          For example, for the page titled "New Features", enter the slug "new-features"
        example: new-features
        required: true
        schema:
          type: string
      - "$ref": "#/components/parameters/x-readme-version"
      responses:
        '200':
          description: The doc exists and has been returned
        '404':
          description: There is no doc with that slug
      security:
      - apiKey: []
    put:
      operationId: updateDoc
      summary: Update doc
      description: Update a doc with this slug
      tags:
      - Docs
      parameters:
      - name: slug
        in: path
        description: Slug of doc. must be lowercase, and replace spaces with hyphens.
          For example, for the page titled "New Features", enter the slug "new-features"
        example: new-features
        required: true
        schema:
          type: string
      - "$ref": "#/components/parameters/x-readme-version"
      requestBody:
        description: Doc object
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Doc"
      responses:
        '200':
          description: The doc has successfully been updated
        '400':
          description: There was a validation error during update
        '404':
          description: There is no doc with that slug
      security:
      - apiKey: []
    delete:
      operationId: deleteDoc
      summary: Delete doc
      description: Delete the doc with this slug
      tags:
      - Docs
      parameters:
      - name: slug
        in: path
        description: Slug of doc. must be lowercase, and replace spaces with hyphens.
          For example, for the page titled "New Features", enter the slug "new-features"
        example: new-features
        required: true
        schema:
          type: string
      - "$ref": "#/components/parameters/x-readme-version"
      responses:
        '204':
          description: The doc has successfully been updated
        '404':
          description: There is no doc with that slug
      security:
      - apiKey: []
  "/docs":
    post:
      operationId: createDoc
      summary: Create doc
      description: Create a new doc inside of this project
      tags:
      - Docs
      parameters:
      - "$ref": "#/components/parameters/x-readme-version"
      requestBody:
        description: Doc object
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Doc"
      responses:
        '201':
          description: The doc has successfully been created
        '400':
          description: There was a validation error during creation
      security:
      - apiKey: []
  "/docs/search":
    post:
      operationId: searchDocs
      summary: Search docs
      description: Returns all docs that match the search
      tags:
      - Docs
      parameters:
      - name: search
        in: query
        description: Search string to look for
        required: true
        schema:
          type: string
      - "$ref": "#/components/parameters/x-readme-version"
      responses:
        '200':
          description: The search was successful and results were returned
        '500':
          description: There is an internal error
      security:
      - apiKey: []
  "/errors":
    get:
      operationId: getErrors
      summary: Get errors
      description: Returns with all of the error page types for this project
      tags:
      - Errors
      responses:
        '200':
          description: An array of the errors
      security:
      - apiKey: []
  "/":
    get:
      operationId: getProject
      summary: Get metadata about the current project
      description: Returns project data for API key
      tags:
      - Projects
      responses:
        '200':
          description: Project data
      security:
      - apiKey: []
  "/swagger":
    post:
      operationId: uploadSwagger
      description: DEPRECATED. Instead use https://docs.readme.com/developers/reference/api-specification#uploadapispecification
        to upload a Swagger file to ReadMe
      tags:
      - Swagger
      deprecated: true
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                swagger:
                  description: Swagger file
                  type: string
                  format: binary
      responses:
        '201':
          description: The Swagger file was successfully imported
        '400':
          description: There was a validation error during import
      security:
      - apiKey: []
  "/swagger/{id}":
    put:
      operationId: updateSwagger
      description: DEPRECATED. Instead, use https://docs.readme.com/developers/reference/api-specification#updateapispecification
        to update a Swagger file.
      tags:
      - Swagger
      deprecated: true
      parameters:
      - name: id
        in: path
        description: ID of the Swagger file
        schema:
          type: string
        required: true
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                swagger:
                  description: Swagger file
                  type: string
                  format: binary
      responses:
        '200':
          description: The Swagger file was successfully updated
        '400':
          description: There was a validation error during import
        '404':
          description: There is no Swagger file with that ID
      security:
      - apiKey: []
    delete:
      operationId: deleteSwagger
      description: DEPRECATED. Instead, use https://docs.readme.com/developers/reference/api-specification#deleteapispecification
        to delete a Swagger file in ReadMe
      tags:
      - Swagger
      deprecated: true
      parameters:
      - name: id
        in: path
        description: ID of swagger the file
        schema:
          type: string
        required: true
      responses:
        '204':
          description: The Swagger file was successfully deleted
        '404':
          description: There is no Swagger file with that ID
      security:
      - apiKey: []
  "/version":
    get:
      operationId: getVersions
      summary: Get versions
      description: Retrieve a list of versions associated with a project API key
      tags:
      - Version
      responses:
        '200':
          description: JSON list of versions
      security:
      - apiKey: []
    post:
      operationId: createVersion
      summary: Create version
      description: Create a new version
      tags:
      - Version
      requestBody:
        description: Version object
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Version"
      responses:
        '200':
          description: The model was successfully created and associated with the
            target project
        '400':
          description: That version already exists in the project, or there are validation
            errors with the request
        '404':
          description: Could not find target fork in database
      security:
      - apiKey: []
  "/version/{versionId}":
    get:
      operationId: getVersion
      summary: Get version
      description: Returns the version with this version ID
      tags:
      - Version
      parameters:
      - "$ref": "#/components/parameters/versionId"
      responses:
        '200':
          description: JSON version model
        '404':
          description: Could not find target version in database
      security:
      - apiKey: []
    put:
      operationId: updateVersion
      summary: Update version
      description: Update an existing version
      tags:
      - Version
      parameters:
      - "$ref": "#/components/parameters/versionId"
      requestBody:
        description: Version object
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Version"
      responses:
        '200':
          description: The target version was successfully updated
        '400':
          description: Cannot demote a version through update
        '404':
          description: Could not find target version in database
      security:
      - apiKey: []
    delete:
      operationId: deleteVersion
      summary: Delete version
      description: Delete a version
      tags:
      - Version
      parameters:
      - "$ref": "#/components/parameters/versionId"
      responses:
        '200':
          description: The target version was successfully deleted
        '400':
          description: Cannot delete the main version for a project
        '404':
          description: Could not find target version in database
      security:
      - apiKey: []
components:
  securitySchemes:
    apiKey:
      type: http
      scheme: basic
  headers:
    link:
      description: Pagination information. See https://docs.readme.com/reference#pagination
      schema:
        type: string
  parameters:
    page:
      name: page
      in: query
      description: Used to specify further pages (starts at 1)
      schema:
        type: integer
        default: 1
        minimum: 1
    perPage:
      name: perPage
      in: query
      description: Number of items to include in pagination (up to 100, defaults to
        10)
      schema:
        type: integer
        default: 10
        minimum: 1
        maximum: 100
    x-readme-version:
      in: header
      name: x-readme-version
      description: Version number of your docs project, for example, v3.0. To see
        all valid versions for your docs project call https://docs.readme.com/developers/reference/version#getversions.
      example: v3.0
      required: true
      schema:
        type: string
    versionId:
      name: versionId
      in: path
      description: Semver version indentifier
      required: true
      schema:
        type: string
  schemas:
    Changelog:
      type: object
      properties:
        title:
          type: string
          description: Title of the changelog
        type:
          type: string
          default: ''
          enum:
          - ''
          - added
          - fixed
          - improved
          - deprecated
          - removed
        body:
          type: string
          description: Body content of the changelog
        hidden:
          type: boolean
          description: Visibility of the changelog
          default: true
      required:
      - title
      - body
    CustomPage:
      type: object
      properties:
        title:
          type: string
          description: Title of the custom page
        body:
          description: Body formatted in Markdown (displayed by default).
          type: string
        html:
          description: Body formatted in HTML (sanitized, only displayed if `htmlmode`
            is **true**).
          type: string
        htmlmode:
          description: "**true** if `html` should be displayed, **false** if `body`
            should be displayed."
          type: boolean
          default: false
        hidden:
          type: boolean
          description: Visibility of the custom page
          default: true
      required:
      - title
    Doc:
      type: object
      properties:
        title:
          type: string
          description: Title of the page
        type:
          type: string
          description: Type of the page. The available types all show up under the
            /docs/ URL path of your docs project (also known as the "guides" section).
            Can be "basic" (most common), "error" (page desribing an API error), or
            "link" (page that redirects to an external link)
          enum:
          - basic
          - error
          - link
        body:
          type: string
          description: Body content of the page, formatted in ReadMe or Github flavored
            Markdown. Accepts long page content, for example, greater than 100k characters
        category:
          type: string
          description: 'Category ID of the page, which you can get through https://docs.readme.com/developers/reference/categories#getcategory '
        hidden:
          type: boolean
          description: Visibility of the page
          default: true
        parentDoc:
          type: string
          description: For a subpage, specify the parent doc ID, which you can get
            through https://docs.readme.com/developers/reference/docs#getdoc
      required:
      - title
      - category
    Version:
      type: object
      properties:
        version:
          type: string
          description: Semantic Version
        codename:
          type: string
          description: Dubbed name of version
        from:
          type: string
          description: Semantic Version to use as the base fork
        is_stable:
          type: boolean
          description: Should this be the **main** version
        is_beta:
          type: boolean
          default: true
        is_hidden:
          type: boolean
          description: Should this be publically accessible?
        is_deprecated:
          type: boolean
          description: Should this be deprecated? Only allowed in PUT operations
      required:
      - version
      - from
